library(tidyverse)
library(broom)
library(dplyr)
library(survival)
# Data preparation
setwd ('C:/Users/romai/Documents/DSTI/21-Survival Analysis/UTMB')
data_utmb17 <- read_csv("utmb_2017.csv", col_names = TRUE)
problems(data_utmb17)
colnames(data_utmb17)
str(data_utmb17)
data_utmb17 <- data_utmb17[,-1] #delete 1st column
#create a column gender & age from category + status (1 = finisher; 0 = DNF / not finisher)
data_utmb17 <-data_utmb17 |>
mutate(gender = case_when(
endsWith(category, " H") ~ "Male",
endsWith(category, " F") ~ "Female"),
age = substring(data_utmb17$category, first=1, last=2), #create a column age from category
status = case_when(time != 'NA' ~ 1, TRUE ~ 0),
.after ="category")
for(i in 35:11)
{if (data_utmb17(,i)!="")
{data_utmb17$newtime<-data_utmb17(,i)}
}
for(i in 35:11)
{if (data_utmb17[,i]!="")
{data_utmb17$newtime<-data_utmb17[,i]}
}
for(i in 35:11)
{while (data_utmb17[,i]!="")
{data_utmb17$newtime<-data_utmb17[,i]}
}
for(i in 35:11)
{while (data_utmb17[,i]!=" ")
{data_utmb17$newtime<-data_utmb17[,i]}
}
for(i in 35:11)
{if(data_utmb17[,i]!=" ")
{data_utmb17$newtime<-data_utmb17[,i]}
}
for(i in 35:11)
{if(data_utmb17[,i]==" ")
{data_utmb17$newtime<-data_utmb17[,i]}
}
for(i in 35:11)
{
{data_utmb17$newtime<-data_utmb17[,i]}
}
View(data_utmb17)
for(i in 35:11)
{if(data_utmb17[,i]==" ")
{data_utmb17$newtime<-data_utmb17[,i]}
}
for (j in 1:nrow(data_utmb17)
{for(i in 35:11)
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(data_utmb17[j,i]==" ")
{data_utmb17$newtime<-data_utmb17[j,i]}
}
}
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(data_utmb17[j,i]!="")
{data_utmb17$newtime<-data_utmb17[j,i]}
}
}
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
latest_time <- function(x) max(x, na.rm = TRUE))
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
latest_time <- function(x) max(x, na.rm = TRUE)
data_utmb17$timetoevent <- latest_time(data_utmb17[11:35])
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
latest_time ->
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(hms(x), na.rm = TRUE))
library(tidyverse)
library(broom)
library(dplyr)
library(survival)
library(luibridate)
library(tidyverse)
library(broom)
library(dplyr)
library(survival)
library(lubridate)
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
latest_time ->
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(hms(x), na.rm = TRUE))
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(hms(x), na.rm = TRUE))
View(data_utmb17)
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
View(data_utmb17)
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
class(data_utmb17$timetoevent)
View(data_utmb17)
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
class(data_utmb17$timetoevent)
View(data_utmb17)
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
class(data_utmb17$timetoevent)
#View(data_utmb17)
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(is.na(data_utmb17[j,i]=FALSE)
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(is.na(data_utmb17[j,i]==FALSE)
{data_utmb17$newtime<-data_utmb17[j,i]}
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(is.na(data_utmb17[j,i])
{data_utmb17$newtime<-data_utmb17[j,i]}
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(is.na(data_utmb17[j,i])
{data_utmb17$newtime<-data_utmb17[data_utmb17[j,i] != "", drop = FALSE]}
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(data_utmb17[data_utmb17[j,i] != "", drop = FALSE])
{data_utmb17$newtime<-data_utmb17[j,i]}
}
}
for (j in 1:nrow(data_utmb17))
{for(i in 35:11)
{if(data_utmb17[data_utmb17[j,i] != "")
#remove intermediate checkpoints time
data_utmb17<-  data_utmb17[,-11:-34]
colnames(data_utmb17)
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17<-  data_utmb17[,-c(2,3,4,8,10,11)]
View(data_utmb17)
summary(data_utmb17)
library(tidyverse)
library(broom)
library(dplyr)
library(survival)
library(lubridate)
library(tidyverse)
library(broom)
library(dplyr)
library(survival)
library(lubridate)
data_utmb17 <- data_utmb17[,-1] #delete 1st column
data_utmb17 <- data_utmb17[,-1] #delete 1st column
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
# Data preparation
setwd ('C:/Users/romai/Documents/DSTI/21-Survival Analysis/UTMB')
data_utmb17 <- read_csv("utmb_2017.csv", col_names = TRUE)
problems(data_utmb17)
colnames(data_utmb17)
str(data_utmb17)
data_utmb17 <- data_utmb17[,-1] #delete 1st column
#create a column gender & age from category + status (1 = finisher; 0 = DNF / not finisher)
data_utmb17 <-data_utmb17 |>
mutate(gender = case_when(
endsWith(category, " H") ~ "Male",
endsWith(category, " F") ~ "Female"),
age = substring(data_utmb17$category, first=1, last=2), #create a column age from category
status = case_when(time != 'NA' ~ 1, TRUE ~ 0),
.after ="category")
View(data_utmb17)
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
class(data_utmb17$timetoevent)
View(data_utmb17)
colnames(data_utmb17)
#remove intermediate checkpoints time
data_utmb17<-  data_utmb17[,-11:-34]
colnames(data_utmb17)
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17<-  data_utmb17[,-c(2,3,4,8,10,11)]
View(data_utmb17)
summary(data_utmb17)
library(tidyverse)
library(broom)
library(dplyr)
library(survival)
library(lubridate)
# Data preparation
setwd ('C:/Users/romai/Documents/DSTI/21-Survival Analysis/UTMB')
data_utmb17 <- read_csv("utmb_2017.csv", col_names = TRUE)
problems(data_utmb17)
colnames(data_utmb17)
str(data_utmb17)
data_utmb17 <- data_utmb17[,-1] #delete 1st column
#create a column gender & age from category + status (1 = finisher; 0 = DNF / not finisher)
data_utmb17 <-data_utmb17 |>
mutate(gender = case_when(
endsWith(category, " H") ~ "Male",
endsWith(category, " F") ~ "Female"),
age = substring(data_utmb17$category, first=1, last=2), #create a column age from category
status = case_when(time != 'NA' ~ 1, TRUE ~ 0),
.after ="category")
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
class(data_utmb17$timetoevent)
#View(data_utmb17)
#remove intermediate checkpoints time
data_utmb17<-  data_utmb17[,-11:-34]
colnames(data_utmb17)
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17<-  data_utmb17[,-c(2,3,4,8,10,11)]
#View(data_utmb17)
``
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17<-  data_utmb17[,-c(2,3,4,8,10,11)]
library(tidyverse)
library(broom)
library(dplyr)
library(survival)
library(lubridate)
# Data preparation
setwd ('C:/Users/romai/Documents/DSTI/21-Survival Analysis/UTMB')
data_utmb17 <- read_csv("utmb_2017.csv", col_names = TRUE)
problems(data_utmb17)
colnames(data_utmb17)
str(data_utmb17)
data_utmb17 <- data_utmb17[,-1] #delete 1st column
#create a column gender & age from category + status (1 = finisher; 0 = DNF / not finisher)
data_utmb17 <-data_utmb17 |>
mutate(gender = case_when(
endsWith(category, " H") ~ "Male",
endsWith(category, " F") ~ "Female"),
age = substring(data_utmb17$category, first=1, last=2), #create a column age from category
status = case_when(time != 'NA' ~ 1, TRUE ~ 0),
.after ="category")
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
class(data_utmb17$timetoevent)
#View(data_utmb17)
#remove intermediate checkpoints time
data_utmb17<-  data_utmb17[,-11:-34]
colnames(data_utmb17)
data_utmb17[2528,6]
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17<-  data_utmb17[,-c(2,3,4,8,10,11)]
#View(data_utmb17)
``
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17<-  data_utmb17[,-c(2,3,4,8,10,11)]
data_utmb17[2528,6]
data_utmb17 <- data_utmb17 %>%
mutate_at(c('timetoevent'), ~na_if(.,''))
colnames(data_utmb17)
View(data_utmb17)
age_range <- tibble('age' =
c("V1", "V2","V3", "V4", "SE"),
'age_range' = c("40-49", "50-59", "60-69", "over 70", "23-39")
)
data_utmb17_v1 <-
data_utmb17 |>
inner_join(
age_range,
by = "age"
)
table(data_utmb17_v1$age_range)
view(data_utmb17_v1)
help('inner_join')
data_utmb17_v1 <-
data_utmb17 |>
inner_join(
age_range,
by = "age",
keep = FALSE
)
table(data_utmb17_v1$age_range)
view(data_utmb17_v1)
data_utmb17_v1 <-
data_utmb17 |>
inner_join(
age_range,
by = "age",
.after ="age"
)
table(data_utmb17_v1$age_range)
view(data_utmb17_v1)
# Data preparation
setwd ('C:/Users/romai/Documents/DSTI/21-Survival Analysis/UTMB')
data_utmb17 <- read_csv("utmb_2017.csv", col_names = TRUE)
problems(data_utmb17)
colnames(data_utmb17)
str(data_utmb17)
data_utmb17_v1 <- data_utmb17[,-1] #delete 1st column
#create a column gender & age from category + status (1 = finisher; 0 = DNF / not finisher)
data_utmb17_v2 <-data_utmb17_v1 |>
mutate(gender = case_when(
endsWith(category, " H") ~ "Male",
endsWith(category, " F") ~ "Female"),
age = substring(data_utmb17_v1$category, first=1, last=2), #create a column age from category
status = case_when(time != 'NA' ~ 1, TRUE ~ 0),
.after ="category")
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17_v2$timetoevent <- apply(data_utmb17[11:35], 1, function(x) max(x, na.rm = TRUE))
#Keep the highest time of the checkpoints and create a new column HighestTime
#start_row <- 11
#end_row <- 35
data_utmb17_v2$timetoevent <- apply(data_utmb17_v2[11:35], 1, function(x) max(x, na.rm = TRUE))
class(data_utmb17_v2$timetoevent)
#View(data_utmb17)
#remove intermediate checkpoints time
data_utmb17_v3<-  data_utmb17_v2[,-11:-34]
colnames(data_utmb17_v3)
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17_v4<-  data_utmb17_v3[,-c(2,3,4,8,10,11)]
#View(data_utmb17)
age_range <- tibble('age' =
c("V1", "V2","V3", "V4", "SE"),
'age_range' = c("40-49", "50-59", "60-69", "over 70", "23-39")
)
data_utmb17_v5 <-
data_utmb17_v4 |>
inner_join(
age_range,
by = "age",
.after ="age"
)
table(data_utmb17_v5$age_range)
view(data_utmb17_v5)
data_utmb17_v5 <-
data_utmb17_v4 |>
inner_join(
age_range,
by = "age"),
data_utmb17_v5 <-
data_utmb17_v4 |>
inner_join(
age_range,
by = "age")
.after ="age"
table(data_utmb17_v5$age_range)
view(data_utmb17_v5)
data_utmb17_v5 <-
data_utmb17_v4 |>
inner_join(
age_range,
by = "age")
.after ="age"
data_utmb17_v5  %>% relocate("age_range", .after = "age")
table(data_utmb17_v5$age_range)
#keep useful columns: bib (or ID), gender, age, status, nationality and time
data_utmb17_v4<-  data_utmb17_v3[,-c(2,3,4,8,10,11)]
#View(data_utmb17)
age_range <- tibble('age' =
c("V1", "V2","V3", "V4", "SE"),
'age_range' = c("40-49", "50-59", "60-69", "over 70", "23-39")
)
data_utmb17_v5 %>% relocate("age_range", .after = "age") <-
data_utmb17_v4 |>
inner_join(
age_range,
by = "age")
data_utmb17_v5 <-
data_utmb17_v4 |>
inner_join(
age_range,
by = "age")
data_utmb17_v5  %>% relocate("age_range", .after = "age")
table(data_utmb17_v5$age_range)
